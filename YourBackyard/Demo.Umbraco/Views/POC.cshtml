@using ClientDependency.Core.Mvc
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
	Layout = null;
	Html.RequiresJs("~/bower_components/angular/angular.js");
	Html.RequiresJs("http://maps.google.com/maps/api/js?sensor=false");
}
<!DOCTYPE html>
<html>
<head>
	<title>YourBackyard</title>
	@Html.RenderJsHere()
</head>
<body>
	<div ng-app="YourBackyard" ng-controller="YourBackyard.Controller">
		<div id="map" style="height: 500px; width: 500px;"></div>
		<a id="addYard" ng-click="addBackyard(addYardText)" href="javascript:void(0)">Add a yard!</a>
		<input name="enterName" ng-model="addYardText" type="text" />
		<p ng-show="error">You need to enter a name!</p>
		<ul >
			<li ng-repeat="backyard in backyards "><a ng-click="selectBackyard(backyard)" href="javascript:void(0)">{{backyard.name}}</a></li>
		</ul>
	</div>
	<script type="text/javascript">
		var app = angular.module('YourBackyard', []);
		app.controller('YourBackyard.Controller', function ($scope) {

			////////////////// Variables //////////////////
			var map;
			$scope.error = false;
			$scope.backyards = [];
			$scope.selectedBackyard = null;
			$scope.addYardText = "";
			////////////////// Constructors //////////////////
			function backyard(name, polygon, colour) {
				this.name = name;
				this.polygon = polygon;
				this.colour = colour;
			}

			////////////////// Initilization //////////////////
			function initMap() {
				//Initialize the map
				map = new google.maps.Map(document.getElementById('map'), {
					zoom: 3,
					center: { lat: 0, lng: -180 },
					mapTypeId: google.maps.MapTypeId.TERRAIN
				});

				map.addListener("click", addCoord);
			}

			////////////////// Scope Methods //////////////////
			$scope.addBackyard = function (name) {
				var colour = "#ff0000";
				if (name != "") {
					$scope.error = false;
					var backyardToAdd = new backyard(name, generatePolygon(colour), colour);

					if ($scope.backyards.length) {
						$scope.backyards.push(backyardToAdd); 
					} else {
						$scope.backyards = [backyardToAdd];
					}

					$scope.selectBackyard(backyardToAdd);
					backyardToAdd.polygon.setMap(map);
				} else {
					$scope.error = true;
				}
			}

			$scope.selectBackyard = function (backyard) {
				$scope.selectedBackyard = backyard;
			}
			
			////////////////// Utils //////////////////
			function generatePolygon(colour) {
				return new google.maps.Polygon({
					geodesic: true,
					strokeColor: colour,
					strokeOpacity: 1.0,
					strokeWeight: 2,
					fillColor: colour,
					fillOpacity: 0.35,
					draggable: true,
					editable: true
				});
			}

			////////////////// Events //////////////////
			function addCoord(event) {
				var borderSoFar = $scope.selectedBackyard.polygon.getPath();
				borderSoFar.push(event.latLng);
			}

			google.maps.event.addDomListener(window, 'load', initMap);

		});
	</script>
</body>
</html>